[project]
name = "innverse-stats"
version = "0.1.0"
description = "Analytics app for The Wandering Inn"
readme = "README.md"
authors = [
    {name = "Cameron Blankenbuehler", email = "cameron.blankenbuehler@protonmail.com"},
]
license = {text = "MIT"}
requires-python = "<4.0,>=3.10"
dependencies = [
    "beautifulsoup4<5.0.0,>=4.12.2",
    "certifi<2025.0.0,>=2024.07.04",
    "charset-normalizer<4.0.0,>=3.2.0",
    "django<6.0.0,>=5.0.3",
    "django-browser-reload<2.0.0,>=1.11.0",
    "django-debug-toolbar<5.0.0,>=4.3.0",
    "django-htmx<2.0.0,>=1.17.2",
    "django-tables2<3.0.0,>=2.6.0",
    "django-tailwind<4.0.0,>=3.5.0",
    "djangorestframework<4.0.0,>=3.14.0",
    "fake-useragent<2.0.0,>=1.1.3",
    "gunicorn<24.0.0,>=23.0.0",
    "idna<4.0,>=3.4",
    "kaleido==0.2.1",
    "pandas<3.0.0,>=2.0.3",
    "pandas-stubs<3.0.0.0,>=2.1.4.231218",
    "plotly<6.0.0,>=5.14.1",
    "psycopg2<3.0.0,>=2.9.9",
    "pygobject<4.0.0,>=3.44.1",
    "pymemcache<5.0.0,>=4.0.0",
    "pysocks<2.0.0,>=1.7.1",
    "python-dotenv<2.0.0,>=1.0.0",
    "regex<2024.0.0,>=2023.12.25",
    "requests<3.0.0,>=2.32.3",
    "scipy<2.0.0,>=1.12.0",
    "soupsieve<3.0.0,>=2.4.1",
    "stem<2.0.0,>=1.8.1",
    "tablib<4.0.0,>=3.5.0",
    "urllib3<3.0,>=2.5.0",
    "uvicorn<1.0.0,>=0.26.0",
    "wikitextparser<1.0.0,>=0.55.13",
    "pip<25.0.0,>=24.1.2",
]

[dependency-groups]
dev = [
    "django-debug-toolbar-template-profiler<3.0.0,>=2.1.0",
    "django-pattern-library<2.0.0,>=1.0.0",
    "django-stubs[compatible-mypy]<5.0.0,>=4.2.7",
    "ipdb==0.13.13",
    "ipython<9.0.0,>=8.14.0",
    "mypy<2.0.0,>=1.7.1",
    "pre-commit<4.0.0,>=3.3.3",
    "pyflame<1.0.0,>=0.3.1",
    "pylsp-mypy<1.0.0,>=0.6.8",
    "statsmodels<1.0.0,>=0.14.0",
    "types-regex<2024.0.0.0,>=2023.12.25.20240311",
    "djangorestframework-stubs[compatible-mypy]<4.0.0,>=3.14.5",
    "pywikibot<10.0.0,>=9.1.3",
    "pytest<9.0.0,>=8.2.2",
    "pytest-django<5.0.0,>=4.8.0",
    "djlint<2.0.0,>=1.35.2",
    "poethepoet>=0.35.0",
    "ruff>=0.12.8",
]

[tool.ruff]
# See https://docs.astral.sh/ruff/settings/#exclude for default excludes
extend-exclude = [
  "data",
  "site-packages",
  "uv.lock",
  "**/migrations",
]

line-length = 120
indent-width = 4

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/settings/#lint_select for default lint rules
# See https://docs.astral.sh/ruff/rules/ for all lint rules
extend-select = [
  "A",    # flake8-builtins rules for shadowed builtin var, functions, etc.
  "ARG",  # flake8-unused-arguments
  "ANN",  # flake8-annotations for missing type annotations
  "ASYNC",# flake8-async rules for asyncio
  "B",    # flake8-bugbear rules for likely bugs or design problems
  "BLE",  # flake8-blind-except for bare Exception or BaseException(s)
  "C4",   # flake8-comprehensions rules
  "COM",  # flake8-commas rules for trailing commas
  "DTZ",  # flake8-datetimez check for naive datetimess
  "E",
  "EM",   # flake8-errmsg consistent exception error message formatting
  "EXE",  # flake8-executable check for correct shebang and permissions
  "G",    # flake8-logging-format don't use format strings in logging messages
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat use implicit string concatenation over multiple lines
  "LOG",  # flake8-logging check for errors using standard logging module
  "PIE",
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib use pathlib instead of os equivalents
  "Q",    # flake8-quotes for consistent quotes
  "RET",  # flake8-return
  "S",    # flake8-bandit security rules
  "SIM",  # flake8-simplify simplifies common expression and control flow
  "T10",  # flake8-debugger check for debugger calls and imports
]
ignore = [
  "COM812",
  "E501",
  "E731",
  "F405",
  "S311",
  "S603",
]

unfixable = [ ]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**/*-example.py" = ["ALL"]
"**/wikibot/*" = ["S105"]
"**/{tests}/*" = ["S101", "ANN201"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = true

[tool.mypy]
plugins = [
  "mypy_django_plugin.main",
  "mypy_drf_plugin.main",
]

[[tool.mypy.overrides]]
# Ignore charts mypy errors because Plotly doesn't currently support typing
# Though there is an existing issue see (https://github.com/plotly/plotly.py/issues/1103)
module = [
  'stats.charts.*',
]
ignore_missing_imports = true
ignore_errors = true

[tool.django-stubs]
django_settings_module = "innverse.settings"
strict_settings = false

[tool.ipdb]
context=5

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "innverse.settings"
filterwarnings = [
    "ignore::UserWarning",
]
testpaths = [
  "innverse",
  "processing",
  "stats",
  "stats/wikibot/tests",
]

[tool.poe]
executor.type = "uv"

[tool.poe.tasks]
build-chapters.cmd = "python manage.py build --skip-wiki-all --skip-colors --skip-text-refs ./data"
build-wiki.cmd = "python manage.py build --skip-colors --skip-text-refs ./data"
makemigrations.cmd = "python manage.py makemigrations"
migrate.cmd = "python manage.py migrate stats"
tailwind-start.cmd = "python manage.py tailwind start"
gen-thumbnails.cmd = "python manage.py generate_chart_thumbnails"
test = "pytest"
collectstatic = "python manage.py collectstatic"
serve-static.cmd = "python -m http.server 8080 -d /tmp/twi-stats/"
run-dev.cmd = "python manage.py runserver 9999"
run-debug.shell = "PYTHONBREAKPOINT=ipdb.set_trace python manage.py runserver 9999"
run-prod.cmd = "python -m gunicorn innverse.asgi:application -k uvicorn.workers.UvicornWorker"
